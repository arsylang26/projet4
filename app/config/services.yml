# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value
#     register.halfday.validator.class: AppBundle\Validator\HalfDay
#     register.offdays.validator.class: AppBundle\Validator\OffDays
#     register.overbooking.validator.class: AppBundle\Validator\OverBooking
#     register.weeklyclosingday.validator.class: AppBundle\Validator\WeeklyClosingDay
#     #register.nobookingday.validator.class: AppBundle\Validator\NoBookingDay
services:
    # BookingTicket configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'




#    #halfday.validator:
#        class: "%register.halfday.validator.class%"
#        tags:
#            - { name: validator.constraint_validator, alias: halfday_validator }
#
#    offdays.validator:
#        class: "%register.offdays.validator.class%"
#        tags:
#            - { name: validator.constraint_validator, alias: offdays_validator }
#
#    overbooking.validator:
#        class: "%register.overbooking.validator.class%"
#        tags:
#            - { name: validator.constraint_validator, alias: overbooking_validator }
#
#    weeklyclosingday.validator:
#        class: "%register.weeklyclosingday.validator.class%"
#        tags:
#            - { name: validator.constraint_validator, alias: weeklyclosingday_validator }
#
#    nobookingday.valdator:
#        class: "%register.nobookingday.validator.class%"
#        tags:
#            - { name: validator.constraint_validator, alias: nobookingday_validator }